{"version":3,"file":"static/js/247.1b43d13d.chunk.js","mappings":"qPA4EA,UAnEa,WACX,IAAAA,GAAkCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA8BL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAClBG,GAAYC,EAAAA,EAAAA,MAAZD,QA+BR,OA7BAE,EAAAA,EAAAA,YAAU,WACR,IAAIJ,EAAJ,CAIA,IAAMK,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAIPC,EAAAA,EAAAA,IAAgBf,GAAS,KAAD,EAAAS,EAAAG,EAAAI,KADxBN,EAAID,EAAZQ,KAAQP,KAGVX,EACEW,EAAKQ,KAAI,SAAAC,GAAoC,MAAQ,CACnDC,GADYD,EAAFC,GAEVC,KAFkBF,EAAJE,KAGdC,UAH6BH,EAATG,UAIpBC,aAJ2CJ,EAAZI,aAKhC,KACDX,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAEFa,EAAAA,GAAAA,MAAYb,EAAAY,GAAME,SAAS,QAEP,OAFOd,EAAAC,KAAA,GAE3BlB,GAAa,GAAOiB,EAAAe,OAAA,6BAAAf,EAAAgB,OAAA,GAAApB,EAAA,wBAEvB,kBAnBiB,OAAAJ,EAAAyB,MAAA,KAAAC,UAAA,KAqBlB3B,GAvBA,CAwBF,GAAG,CAACH,EAASF,IAETJ,GAEAqC,EAAAA,EAAAA,KAAA,MAAAC,SACG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGd,KAAI,SAACe,EAAGC,GAAG,OAC1BC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACED,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,CAACC,OAAQ,IAAKC,MAAO,OAC9BP,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,CAACC,OAAQ,GAAIC,MAAO,OAC7BP,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,CAACC,OAAQ,GAAIC,MAAO,QAHtBJ,EAIJ,MAIDpC,EAAQyC,QAIhBR,EAAAA,EAAAA,KAAA,MAAAC,SACGlC,EAAQoB,KAAI,SAAAsB,GAAA,IAAGpB,EAAEoB,EAAFpB,GAAIC,EAAImB,EAAJnB,KAAMC,EAASkB,EAATlB,UAAWC,EAAYiB,EAAZjB,aAAY,OAC/CY,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEU,IAAG,GAAAC,OAxDY,kCAwDaA,OAAGnB,GAC/BoB,IAAKtB,EACLiB,MAAM,SAERP,EAAAA,EAAAA,KAAA,KAAAC,SAAIX,KACJU,EAAAA,EAAAA,KAAA,KAAAC,SAAIV,MAPGF,EAQJ,OAbJW,EAAAA,EAAAA,KAAA,KAAAC,SAAG,yCAkBd,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieCredits } from 'api/api';\nimport Skeleton from 'react-loading-skeleton';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nconst ACTOR_PHOTO_BASE_URL = 'https://image.tmdb.org/t/p/w92';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [credits, setCredits] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (credits) {\n      return;\n    }\n\n    const fetchCredits = async () => {\n      try {\n        const {\n          data: { cast },\n        } = await getMovieCredits(movieId);\n\n        setCredits(\n          cast.map(({ id, name, character, profile_path }) => ({\n            id,\n            name,\n            character,\n            profile_path,\n          }))\n        );\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCredits();\n  }, [movieId, credits]);\n\n  if (isLoading) {\n    return (\n      <ul>\n        {[1, 2, 3, 4, 5].map((_, key) => (\n          <li key={key}>\n            <Skeleton height={150} width={100} />\n            <Skeleton height={20} width={150} />\n            <Skeleton height={20} width={150} />\n          </li>\n        ))}\n      </ul>\n    );\n  } else if (!credits.length) {\n    return <p>We don't have any cast for this movie</p>;\n  } else {\n    return (\n      <ul>\n        {credits.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <img\n              src={`${ACTOR_PHOTO_BASE_URL}${profile_path}`}\n              alt={name}\n              width=\"100\"\n            />\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","credits","setCredits","movieId","useParams","useEffect","fetchCredits","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovieCredit","cast","wrap","_context","prev","next","getMovieCredits","sent","data","map","_ref2","id","name","character","profile_path","t0","toast","message","finish","stop","apply","arguments","_jsx","children","_","key","_jsxs","Skeleton","height","width","length","_ref3","src","concat","alt"],"sourceRoot":""}