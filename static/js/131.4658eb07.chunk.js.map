{"version":3,"file":"static/js/131.4658eb07.chunk.js","mappings":"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","sources":["components/BackButton/BackButtonStyled.jsx","components/BackButton/BackButton.jsx","components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetails.jsx","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst BackButtonStyled = styled.button`\n  padding: 3px;\n\n  display: inline-flex;\n  align-items: center;\n\n  font-size: 12px;\n\n  cursor: pointer;\n`;\n\nexport default BackButtonStyled;\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport BackButtonStyled from './BackButtonStyled';\n\nconst BackButton = ({ location }) => {\n  const navigate = useNavigate();\n\n  return (\n    <BackButtonStyled\n      type=\"button\"\n      onClick={() => navigate(location.state ?? '/')}\n    >\n      &larr; Go back\n    </BackButtonStyled>\n  );\n};\n\nBackButton.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      from: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default BackButton;\n","import styled from 'styled-components';\n\nconst MovieDetailsStyled = styled.div`\n  margin-top: 20px;\n\n  & .content-wrapper {\n    display: flex;\n\n    margin-top: 20px;\n  }\n\n  & .poster-wrapper {\n    width: 185px;\n    height: 278px;\n\n    margin-top: 1px;\n\n    flex-shrink: 0;\n\n    background-color: #ebebeb;\n\n    margin-right: 20px;\n  }\n\n  & .details-wrapper {\n    flex: 1;\n\n    & .react-loading-skeleton:not(:last-child) {\n      margin-bottom: 10px;\n    }\n  }\n\n  & img {\n    width: 100%;\n    height: 100%;\n\n    object-fit: cover;\n  }\n`;\n\nexport default MovieDetailsStyled;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport BackButton from 'components/BackButton/BackButton';\nimport MovieDetailsStyled from './MovieDetailsStyled';\nimport 'react-loading-skeleton/dist/skeleton.css';\n\nconst MOVIE_POSTER_BASE_URL = 'https://image.tmdb.org/t/p/w185';\n\nconst MovieDetails = ({ movie, isLoading }) => {\n  const location = useLocation();\n  const locationRef = useRef(location);\n\n  if (isLoading || !movie) {\n    return (\n      <MovieDetailsStyled>\n        <BackButton location={locationRef.current} />\n        <div className=\"content-wrapper\">\n          <div className=\"poster-wrapper\">\n            <Skeleton height={278} width={185} />\n          </div>\n          <div className=\"details-wrapper\">\n            <br />\n            <Skeleton height={30} width={200} />\n            <Skeleton height={20} count={7} />\n          </div>\n        </div>\n      </MovieDetailsStyled>\n    );\n  } else {\n    const { title, overview, genres, vote_average, poster_path } = movie;\n\n    return (\n      <MovieDetailsStyled>\n        <BackButton location={locationRef.current} />\n        <div className=\"content-wrapper\">\n          <div className=\"poster-wrapper\">\n            <img src={`${MOVIE_POSTER_BASE_URL}/${poster_path}`} alt={title} />\n          </div>\n          <div className=\"details-wrapper\">\n            <h2>{title}</h2>\n            <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            {genres.length > 0 && <h3>Genres</h3>}\n            <p>{genres.map(({ name }) => name).join(' ')}</p>\n          </div>\n        </div>\n      </MovieDetailsStyled>\n    );\n  }\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    vote_average: PropTypes.number.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }),\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nconst AdditionalInformation = styled.div`\n  margin: 10px 0;\n\n  border-top: 2px solid #d8d8d8;\n  border-bottom: 2px solid #d8d8d8;\n`;\n\nexport default AdditionalInformation;\n","import { useEffect, useState } from 'react';\nimport { Link, Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'api/api';\nimport { toast } from 'react-toastify';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport AdditionalInformation from 'components/AdditionalInformation/AdditionalInformation';\n\nconst MovieDetailsPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (movie) {\n      return;\n    }\n\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n\n        const {\n          data: { title, overview, genres, vote_average, poster_path },\n        } = await getMovieDetails(movieId);\n\n        setMovie({\n          title,\n          overview,\n          genres,\n          vote_average,\n          poster_path,\n        });\n      } catch (error) {\n        if (error?.response?.status === 404) {\n          toast.error('Movie not found.');\n          navigate('/', { replace: true });\n        } else {\n          toast.error(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [movie, movieId, navigate]);\n\n  return (\n    <>\n      {<MovieDetails movie={movie} isLoading={isLoading} />}\n      <AdditionalInformation>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AdditionalInformation>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","_ref","location","navigate","useNavigate","_jsx","BackButtonStyled","type","onClick","_location$state","state","children","movie","isLoading","useLocation","locationRef","useRef","_jsxs","MovieDetailsStyled","BackButton","current","className","Skeleton","height","width","count","title","overview","genres","vote_average","poster_path","src","concat","alt","toFixed","length","map","_ref2","name","join","_useState","useState","_useState2","_slicedToArray","setIsLoading","_useState3","_useState4","setMovie","movieId","useParams","useEffect","fetchMovie","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovieDetail","_yield$getMovieDetail2","_error$response","wrap","_context","prev","next","getMovieDetails","sent","data","t0","response","status","toast","replace","message","finish","stop","apply","arguments","_Fragment","MovieDetails","AdditionalInformation","Link","to","Outlet"],"sourceRoot":""}